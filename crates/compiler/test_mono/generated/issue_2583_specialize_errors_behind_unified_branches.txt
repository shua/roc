procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.119, List.120):
    let List.673 : U64 = CallByName List.6 List.119;
    let List.669 : Int1 = CallByName Num.22 List.120 List.673;
    if List.669 then
        let List.671 : I64 = CallByName List.66 List.119 List.120;
        let List.670 : [C {}, C I64] = TagId(1) List.671;
        ret List.670;
    else
        let List.668 : {} = Struct {};
        let List.667 : [C {}, C I64] = TagId(0) List.668;
        ret List.667;

procedure List.6 (#Attr.2):
    let List.674 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.674;

procedure List.66 (#Attr.2, #Attr.3):
    let List.672 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.672;

procedure List.9 (List.391):
    let List.666 : U64 = 0i64;
    let List.659 : [C {}, C I64] = CallByName List.2 List.391 List.666;
    let List.663 : U8 = 1i64;
    let List.664 : U8 = GetTagId List.659;
    let List.665 : Int1 = lowlevel Eq List.663 List.664;
    if List.665 then
        let List.392 : I64 = UnionAtIndex (Id 1) (Index 0) List.659;
        let List.660 : [C Int1, C I64] = TagId(1) List.392;
        ret List.660;
    else
        let List.662 : Int1 = true;
        let List.661 : [C Int1, C I64] = TagId(0) List.662;
        ret List.661;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.283 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.283;

procedure Str.27 (Str.110):
    let Str.300 : [C Int1, C I64] = CallByName Str.76 Str.110;
    ret Str.300;

procedure Str.42 (#Attr.2):
    let Str.308 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.308;

procedure Str.76 (Str.217):
    let Str.218 : {I64, U8} = CallByName Str.42 Str.217;
    let Str.306 : U8 = StructAtIndex 1 Str.218;
    let Str.307 : U8 = 0i64;
    let Str.303 : Int1 = CallByName Bool.11 Str.306 Str.307;
    if Str.303 then
        let Str.305 : I64 = StructAtIndex 0 Str.218;
        let Str.304 : [C Int1, C I64] = TagId(1) Str.305;
        ret Str.304;
    else
        let Str.302 : Int1 = false;
        let Str.301 : [C Int1, C I64] = TagId(0) Str.302;
        ret Str.301;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        dec Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        dec Test.2;
        ret Test.1;
